<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>namedtuple on Dev Blog</title>
    <link>https://blog.aaronnotes.com/tags/namedtuple/</link>
    <description>Recent content in namedtuple on Dev Blog</description>
    <image>
      <title>Dev Blog</title>
      <url>https://cdn.jsdelivr.net/gh/lijqhs/cdn@1.6/img/icons/rocket-andy-hermawan-unsplash.jpg</url>
      <link>https://cdn.jsdelivr.net/gh/lijqhs/cdn@1.6/img/icons/rocket-andy-hermawan-unsplash.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 11 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.aaronnotes.com/tags/namedtuple/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Namedtuple</title>
      <link>https://blog.aaronnotes.com/posts/python/namedtuple/</link>
      <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.aaronnotes.com/posts/python/namedtuple/</guid>
      <description>The namedtuple function is a factory function from the collections module in Python that creates a new class-like object that behaves like a tuple, but with named fields. Here are some cases where you might consider using namedtuple:
  Improved readability: If you have a collection of records or objects that have a fixed set of attributes, using a namedtuple can make your code more readable by giving names to the fields instead of relying on integer indices.</description>
    </item>
    
  </channel>
</rss>
